<%- include("../../views/partials/admin/header") %>
<section class="content-main">
  <div class="content-header">
    <div>
      <h2 class="content-title card-title">Dashboard</h2>
    </div>
  </div>
<div class="row mb-4">
  <div class="col-md-4">
    <div class="card p-3 bg-light">
      <h5>Total Orders</h5>
      <h3 id="summaryOrders">-</h3>
    </div>
  </div>
  <div class="col-md-4">
    <div class="card p-3 bg-light">
      <h5>Total Sales</h5>
      <h3 id="summarySales">₹-</h3>
    </div>
  </div>
  <div class="col-md-4">
    <div class="card p-3 bg-light">
      <h5>Total Discount</h5>
      <h3 id="summaryDiscount">₹-</h3>
    </div>
  </div>
</div>

<div class="d-flex justify-content-between align-items-center mb-3 px-3">
  <h5 class="card-title">Sales Overview</h5>
  <select id="salesRange" class="form-select w-auto" onchange="fetchDashboardData(this.value)">
    <option value="last7">Last 7 Days</option>
    <option value="monthly">Monthly</option>
    <option value="yearly">Yearly</option>
    <option value="custom">Custom Range</option>
  </select>
</div>
<div class="mb-3 d-flex gap-2">
  <label>Start Date</label>
  <input type="date" id="startDate" class="form-control" />
  <label>End Date</label>
  <input type="date" id="endDate" class="form-control" />
  <button class="btn btn-primary" onclick="applyCustomRange()">Apply</button>
</div>


<div class="row mt-4">
<div class="card mb-4 col-md-8 mx-auto">
  <div class="card-body">
    <h5 class="card-title">Sales</h5>
    <canvas id="salesChart" height="125"></canvas>
  </div>
</div>

  <div class="col-md-4 mx-auto">
    <div class="card p-3">
      <h5 class="card-title text-center">Sales by Category</h5>
      <canvas id="categoryPieChart" height="150"></canvas>
    </div>
  </div>
</div>
<div class="row mt-4">
  <div class="col-md-12">
    <div class="card p-3">
      <h5 class="card-title">Top 3 Products</h5>
      <ul class="list-group list-group-flush" id="bestProductsList"></ul>
    </div>
  </div>
  </div>
  <div class="row mt-4">
  <div class="col-md-6">
    <div class="card p-3">
      <h5 class="card-title">Top 3 Brands</h5>
      <ul class="list-group list-group-flush " id="bestBrandsList"></ul>
    </div>
  </div>
  <div class="col-md-6">
    <div class="card p-3">
      <h5 class="card-title">Top 3 Categories</h5>
      <ul class="list-group list-group-flush" id="bestCategoriesList"></ul>
    </div>
  </div>
</div>


 

</section>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
  let chartInstance;

  async function fetchDashboardData(range, startDate = '', endDate = '') {
    let url = `/admin/sales-summary?range=${range}`;
    if (range === 'custom') {
      if (!startDate || !endDate) {
        return Swal.fire("Invalid Range", "Please select both start and end dates", "warning");
      }
      url += `&startDate=${startDate}&endDate=${endDate}`;
    }

    const res = await fetch(url);
    const data = await res.json();
    // Pie Chart: Category Sales
    const categoryCtx = document.getElementById("categoryPieChart").getContext("2d");
    const categoryLabels = Object.keys(data.categorySales || {});
    const categoryValues = Object.values(data.categorySales || {});

    if (window.categoryPieInstance) window.categoryPieInstance.destroy(); // destroy old if exists

    window.categoryPieInstance = new Chart(categoryCtx, {
      type: 'doughnut',
      data: {
        labels: categoryLabels,
        datasets: [{
          data: categoryValues,
          backgroundColor: ['#4e73df', '#1cc88a', '#36b9cc', '#f6c23e', '#e74a3b', '#858796'],
        }]
      },
      options: {
        plugins: {
          legend: {
            position: 'bottom',
          },
        }
      }
    });


    document.getElementById("summaryOrders").innerText = data.totalOrders;
    document.getElementById("summarySales").innerText = `₹${data.totalAmount}`;
    document.getElementById("summaryDiscount").innerText = `₹${data.totalDiscount}`;

    const ctx = document.getElementById("salesChart").getContext("2d");
    if (chartInstance) chartInstance.destroy(); // destroy old chart if exists

    chartInstance = new Chart(ctx, {
      type: 'line',
      data: {
        labels: data.labels,
        datasets: [{
          label: 'Sales ₹',
          data: data.sales,
          borderColor: '#4e73df',
          fill: true,
          backgroundColor: 'rgba(78, 115, 223, 0.1)',
          tension: 0.3,
        }]
      }
    });
    function renderTopList(containerId, items) {
      const container = document.getElementById(containerId);
      container.innerHTML = ''; // Clear old
      if (!items || items.length === 0) {
        container.innerHTML = '<li class="list-group-item">No data</li>';
        return;
      }

      items.forEach(([name, qty]) => {
        const li = document.createElement("li");
        li.className = "list-group-item d-flex justify-content-between align-items-center";
        li.innerHTML = `<span>${name}</span><span><strong>${qty}</strong></span>`;
        container.appendChild(li);
      });
    }

   function renderTopProducts(containerId, products) {
      const container = document.getElementById(containerId);
      container.innerHTML = '';

      if (!products || products.length === 0) {
        container.innerHTML = '<li class="list-group-item">No data</li>';
        return;
      }

      products.forEach(prod => {
        const li = document.createElement("li");
        li.className = "list-group-item d-flex align-items-center";
        li.innerHTML = `
          <img src="${prod.image}" alt="${prod.name}" class="rounded me-2" style="width: 100px; height: 100px; object-fit: cover;">
          <div class="flex-grow-1">
            <strong>${prod.name}</strong><br>
            <small class="text-muted">${prod.brand}</small>
          </div>
          <span class="badge bg-dark ">${prod.quantity}</span>
        `;
        container.appendChild(li);
      });
    }
 

    renderTopProducts("bestProductsList", data.bestProducts);
    renderTopList("bestBrandsList", data.bestBrands);
    renderTopList("bestCategoriesList", data.bestCategories);
  }

  function applyCustomRange() {
  const startDate = document.getElementById("startDate").value;
  const endDate = document.getElementById("endDate").value;
  const today = new Date().toISOString().split("T")[0]; // Format: YYYY-MM-DD

  if (!startDate || !endDate) {
    return Swal.fire("Missing Dates", "Please select both start and end dates", "warning");
  }

  if (startDate > today || endDate > today) {
    return Swal.fire("Invalid Date", "Future dates are not allowed", "warning");
  }

  if (endDate < startDate) {
    return Swal.fire("Invalid Range", "End date cannot be earlier than start date", "warning");
  }

  fetchDashboardData("custom", startDate, endDate);
}


  // On initial load
  fetchDashboardData("last7");
</script>





<%- include("../../views/partials/admin/footer") %>
